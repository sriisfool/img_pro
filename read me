Aim üéØ
The objective of Task 1C is to develop essential image processing skills that will contribute to creating a 2D map for a drone to navigate in the environment.
Prerequisites üìã
It is presumed that you have successfully gone through the image processing resources provided in Learning Section. Also this task involves writing programs in Python/C++ programming language, so get acquainted with the basics of Python and C++ and OpenCV libraries.
Installations üì•

Before proceeding further, you need to install the some packages. To do that, follow these commands:

    Install openCV - This package provides various tools and algorithms for image and video processing, object detection, feature extraction, and more.

pip3 install opencv-contrib-python

Install imutils - This package make basic image processing functions such as translation, rotation, resizing, skeletonization, displaying Matplotlib images, sorting contours, detecting edges, and much more easier with OpenCV and Python.

pip3 install imutils

Install NumPy - This package is used for working with arrays. It has functions for working in domain of linear algebra, fourier transform, and matrices.

    pip3 install numpy

Task üìù

    Apply Perspective Transform

        Load the given image task1c_image.jpg into your image processing environment.

        Use an Aruco detection algorithm to locate and identify the four Aruco markers in the image. These corners will serve as the reference points for the perspective transform.

        Define a set of four destination points that correspond to the desired output perspective. These points should form a rectangular or square shape in the transformed image. Ensure that the order of the destination points matches the order of the Aruco marker points.

        Use the identified Aruco marker points and the defined destination points to calculate the perspective transformation matrix. Apply the perspective transformation to the original image, producing a new image with the desired perspective.

    Find Obstacles
        Use transformed image, and then find the obstacles in the given image using openCV algorithms (understand the goal of this task and refer to learning resources to find out right algorithm for this problem).

    At the end you need to generate a .txt file which should contain
        List of Aruco's detected
        No of Obstacles
        Total Area covered by obstacles

input image
https://portal.e-yantra.org/themeBook/wd/Task_1/images/input.jpg
output image
https://portal.e-yantra.org/themeBook/wd/Task_1/images/output.png


